# Database Configuration
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/b2bapp?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
    username: root
    password: test123
    driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: true

  # OpenAPI Configuration
  doc:
    api-docs:
      path: /api-docs
      info:
        title: Login System API
        description: Spring Boot REST API for user authentication and management system with Spring Data REST. This API provides comprehensive user management, client organization handling, role-based access control, and authentication logging capabilities.
        version: 1.0.0
        contact:
          name: API Support
          email: support@example.com
          url: https://example.com/support
        license:
          name: MIT License
          url: https://opensource.org/licenses/MIT
      servers:
        - url: http://localhost:8080
          description: Development server
        - url: https://api.example.com
          description: Production server
      tags:
        - name: Users
          description: User management operations including authentication, profile management, and user queries
        - name: Clients
          description: Client organization management operations
        - name: Roles
          description: Role and permission management operations
        - name: Client Roles
          description: Client-role association management
        - name: User Roles
          description: User-role assignment management
        - name: Login Logs
          description: Authentication audit and login tracking operations
    swagger-ui:
      path: /swagger-ui.html
      operations-sorter: method
      tags-sorter: alpha
      try-it-out-enabled: true
    packages-to-scan: com.example.login
    paths-to-match: /api/**

  # Spring Data REST Configuration
  data:
    rest:
      base-path: /api
      default-page-size: 20
      max-page-size: 100

# Server Configuration
server:
  port: 8080

# Logging
logging:
  level:
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
